name: Docker Build, Scan, and Test Endpoints

on:
  push:
    branches: [main]

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/my-app:latest .

      - name: Install Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/my-app:latest
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'

      - name: Push to Docker Hub
        if: success()  # Solo si pasa Trivy
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/my-app:latest

  test-endpoints:
    needs: build-and-scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version  # Verificar instalaci√≥n

      - name: Run Docker image for Read service (GET /hola)
        run: |
          docker run -d -p 8082:8080 --name read-golang ${{ secrets.DOCKERHUB_USERNAME }}/my-app:latest
          sleep 15  # Esperar que arranque el servicio

      - name: Test Read endpoint (GET /hola)
        run: |
          curl --fail http://localhost:8082/hola || exit 1

      - name: Set up Docker Compose and run services
        run: |
          docker-compose -f ./docker-compose.yaml up -d
          sleep 15  # Esperar que arranquen los servicios

      - name: Test Create endpoint (POST)
        run: |
          curl -X POST http://localhost:8080/create \
            -H "Content-Type: application/json" \
            -d '{"nombre":"Test","telefono":"123","direccion":"Test","cedula":"999","correo":"test@correo.com"}' \
            || exit 1
